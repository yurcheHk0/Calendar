{"version":3,"sources":["components/SidebarMenu/sidebar.module.scss","cammon/styles/select.module.scss","components/UI/Button/button.module.scss","components/main.module.scss","cammon/store/AppContext.ts","components/Header/index.js","components/SidebarMenu/index.tsx","components/Pages/Home/index.tsx","components/Pages/Info/index.tsx","components/UI/Button/index.js","components/Pages/Create/NotesDivider.tsx","cammon/helpers/date.helper.js","cammon/constants/date.constant.js","components/Pages/Create/index.js","components/index.js","cammon/store/Store.js","App.js","serviceWorker.js","index.js","components/Header/header.module.scss","components/Pages/Create/create.module.scss"],"names":["module","exports","AppContext","React","createContext","Header","methods","useContext","className","styles","header","menu","onClick","toggleSidebar","global","top","middle","bottom","to","name","lang","commonSelect","selectStyle","onChange","event","value","target","changeLanguage","localStorage","setItem","defaultValue","getItem","map","language","toUpperCase","SidebarMenu","data","isSidebarOpen","translation","sidebar","visible","hidden","backLayer","wrapper","Home","Info","Button","txt","color","handleClick","btn","default","NotesDividers","Array","index","divider","currentYear","Date","getFullYear","currentMonth","getMonth","monthLong","daysShort","Create","useState","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","CM","CY","listOfYears","first","last","step","a","b","push","slice","dateRange","firstDayInMonth","getDay","tBody","numberOfDays","result","tempArr","BEFORE","AFTER","i","j","k","elem","length","EXTRA_AFTER","prepareTableBody","month","year","getDate","getDaysInMonth","filters","Number","parseInt","changeYear","changeMonth","window","print","id","toPrint","A4","table","day","tr","td","Math","random","Calendar","content","exact","path","component","from","langMap","ua","en","enLang","Store","props","toggleSidebarAction","setState","state","changeLanguageAction","this","Provider","children","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.70e7eb34.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__1sSqA\",\"backLayer\":\"sidebar_backLayer__2bGUI\",\"wrapper\":\"sidebar_wrapper__q4s8X\",\"hidden\":\"sidebar_hidden__3lRVV\",\"visible\":\"sidebar_visible__138iS\",\"header\":\"sidebar_header__1rtKt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectStyle\":\"select_selectStyle__Kwtl9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"button_btn__3qewh\",\"default\":\"button_default__1OHvJ\",\"primary\":\"button_primary__1tSnQ\",\"secondary\":\"button_secondary__3qqe5\",\"disabled\":\"button_disabled__2Xt-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"main_content__26n-v\"};","import React from 'react';\r\n\r\nconst AppContext = React.createContext<any>({} as any);\r\n\r\nexport default AppContext;","import React, { useContext, } from \"react\";\r\n\r\nimport styles from './header.module.scss';\r\nimport commonSelect from \"../../cammon/styles/select.module.scss\";\r\n\r\nimport AppContext from \"../../cammon/store/AppContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default\r\nfunction Header () {\r\n\r\n    const { methods } = useContext(AppContext);\r\n    const supportedLanguages = ['en', 'ua'];\r\n\r\n    const changeLang = (event) => {\r\n        const { value } = event.target;\r\n\r\n        methods.changeLanguage(value);\r\n\r\n        localStorage.setItem('lang', value || \"en\");\r\n    }\r\n\r\n    return (\r\n        <header className={styles.header}>\r\n            <div\r\n                className={styles.menu}\r\n                onClick={methods.toggleSidebar}\r\n            >\r\n                <span className={`${styles.global} ${styles.top}`} />\r\n                <span className={`${styles.global} ${styles.middle}`} />\r\n                <span className={`${styles.global} ${styles.bottom}`} />\r\n            </div>\r\n\r\n            <Link to={'/'}>\r\n                <div className={styles.name}>\r\n                    Calendar generator\r\n                </div>\r\n            </Link>\r\n\r\n            <select\r\n                className={`${styles.lang} ${commonSelect.selectStyle}`}\r\n                onChange={changeLang}\r\n                defaultValue={localStorage.getItem('lang') || 'en'}\r\n            >\r\n                {supportedLanguages.map(language => {\r\n                    return <option\r\n                        value={language}\r\n                        key={language}\r\n                    >\r\n                        {language.toUpperCase()}\r\n                    </option>\r\n                })}\r\n            </select>\r\n        </header>\r\n    );\r\n}\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AppContext from \"../../cammon/store/AppContext\"\r\nimport styles from \"./sidebar.module.scss\";\r\n\r\nexport default\r\nfunction SidebarMenu() {\r\n    const {\r\n        data: { isSidebarOpen, translation },\r\n        methods\r\n    } = useContext(AppContext);\r\n\r\n    return (\r\n        <aside className={`${styles.sidebar} ${isSidebarOpen ? styles.visible : styles.hidden}`}>\r\n            <div\r\n                className={styles.backLayer}\r\n                onClick={methods.toggleSidebar}\r\n            />\r\n            <div className={styles.wrapper}>\r\n                <div className={styles.header} />\r\n\r\n                <ul>\r\n                    <li>\r\n                        <Link\r\n                            to=\"/\"\r\n                            onClick={methods.toggleSidebar}\r\n                        >\r\n                            {translation['Home'] || 'Home'}\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            to=\"/create\"\r\n                            onClick={methods.toggleSidebar}\r\n                        >\r\n                            {translation['Create'] || 'Create'}\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            to=\"/info\"\r\n                            onClick={methods.toggleSidebar}\r\n                        >\r\n                            {translation['Info'] || 'Info'}\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </aside>\r\n    );\r\n}\r\n\r\n","import React, { useContext } from \"react\";\r\nimport AppContext from \"../../../cammon/store/AppContext\";\r\n\r\nexport default\r\nfunction Home() {\r\n    const {\r\n        data: { translation }\r\n    } = useContext( AppContext );\r\n\r\n    return (\r\n        <div>\r\n            {translation['test']}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nexport default\r\nfunction Info() {\r\n    return (\r\n        <div>info Page</div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport styles from \"./button.module.scss\";\r\n\r\nexport default\r\nfunction Button(\r\n    {\r\n        txt,\r\n        color,\r\n        handleClick\r\n    }\r\n) {\r\n   return <button\r\n        className={`${styles.btn} ${color ? styles[color] : styles.default}`}\r\n        onClick={handleClick}\r\n    >\r\n        {txt}\r\n    </button>\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./create.module.scss\";\r\n\r\nexport default\r\nfunction NotesDividers() {\r\n    const NUMBER_OF_DIVIDERS = 5;\r\n\r\n    return [...Array(NUMBER_OF_DIVIDERS)].map(\r\n        (\r\n            value,\r\n            index\r\n        ) => <div\r\n                className={styles.divider}\r\n                key={'divider-' + index}\r\n            />\r\n        );\r\n}","export const currentYear = () => {\r\n    const date = new Date();\r\n    return  date.getFullYear();\r\n};\r\n\r\nexport const currentMonth = () => {\r\n    const date = new Date();\r\n    return  date.getMonth();\r\n};\r\n\r\nexport const dateRange = (first, last, step) => {\r\n    let a = [first], b = first;\r\n    while (b < last) {\r\n        a.push(b += step || 1);\r\n    }\r\n    return (b > last) ? a.slice(0,-1) : a;\r\n};\r\n\r\nexport const getDaysInMonth = (month, year) => new Date(year, month + 1, 0).getDate();\r\n\r\nexport const getFirstDayInMonth = (month, year) => new Date(year + \"-\" + ( month + 1 ) + \"-01\").getDay();\r\n","export const monthLong = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\nexport const  monthShort = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n\r\nexport const daysLong = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\nexport const daysShort = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\r\n","import React, { useState } from \"react\";\r\n\r\nimport styles from \"./create.module.scss\"\r\nimport commonSelect from \"../../../cammon/styles/select.module.scss\";\r\nimport Button from \"../../UI/Button\";\r\nimport NotesDividers from \"./NotesDivider\";\r\n\r\nimport {\r\n    currentMonth,\r\n    currentYear,\r\n    getDaysInMonth,\r\n    dateRange,\r\n    getFirstDayInMonth,\r\n} from \"../../../cammon/helpers/date.helper\";\r\nimport { monthLong, daysShort } from \"../../../cammon/constants/date.constant\";\r\n\r\nexport default\r\nfunction Create() {\r\n    const [selectedMonth,  setSelectedMonth] = useState(currentMonth())\r\n    const [selectedYear,  setSelectedYear] = useState(currentYear())\r\n\r\n    const changeMonth = (event) => {\r\n        setSelectedMonth(Number.parseInt(event.target.value));\r\n    }\r\n\r\n    const changeYear = (event) => {\r\n        setSelectedYear(Number.parseInt(event.target.value));\r\n    }\r\n\r\n    const prepareTableBody = (\r\n        numberOfDays,\r\n        firstDayInMonth\r\n    ) => {\r\n        let result = [];\r\n        let tempArr = [];\r\n        const CHUNK_SIZE = 7;\r\n        const CELLS_COUNT = 35;\r\n        const BEFORE = firstDayInMonth === 0 ? 7 - 1 : firstDayInMonth - 1;\r\n        const AFTER = CELLS_COUNT - BEFORE - numberOfDays;\r\n\r\n        for (let i=0; i < BEFORE; i++){\r\n            tempArr.push(0);\r\n        }\r\n\r\n        for (let j=0; j < numberOfDays; j++){\r\n            tempArr.push(j + 1);\r\n        }\r\n\r\n        for (let k=0; k < AFTER; k++){\r\n            tempArr.push(0);\r\n        }\r\n\r\n        tempArr.map(function(elem, i) {\r\n            return i % CHUNK_SIZE ? [] : result.push([tempArr.slice(i, i + CHUNK_SIZE)]);\r\n        });\r\n\r\n        // Adding extra cells in case if month have 6 row\r\n        if (result.length === 6) {\r\n            const EXTRA_AFTER = CHUNK_SIZE - result[result.length - 1][0].length;\r\n\r\n            for (let k=0; k < EXTRA_AFTER; k++){\r\n                // Push empty cells to last chain\r\n                result[result.length - 1][0].push(0);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    const CM = currentMonth();\r\n    const CY = currentYear();\r\n    const listOfYears = dateRange(CY - 3, CY + 3, 1);\r\n    const firstDayInMonth = getFirstDayInMonth(\r\n        selectedMonth,\r\n        selectedYear\r\n    );\r\n    const tBody = prepareTableBody(\r\n        getDaysInMonth(selectedMonth, selectedYear),\r\n        firstDayInMonth\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.filters}>\r\n                <h2>Settings</h2>\r\n                <select\r\n                    className={commonSelect.selectStyle}\r\n                    defaultValue={CY}\r\n                    onChange={(event) => changeYear(event)}\r\n                >\r\n                    { listOfYears.map(year => <option key={ year } value={ year } >{ year }</option>) }\r\n                </select>\r\n                <select\r\n                    className={commonSelect.selectStyle}\r\n                    defaultValue={CM}\r\n                    onChange={(event) => changeMonth(event)}\r\n                >\r\n                    { monthLong.map((month, index) => <option key={ month } value={ index } >{ month }</option>) }\r\n                </select>\r\n                <Button\r\n                    txt={'Print'}\r\n                    color={'primary'}\r\n                    handleClick={() => window.print()}\r\n                />\r\n            </div>\r\n\r\n            <div\r\n                id={'section-to-print'}\r\n                className={`${styles.toPrint} ${styles.A4}`}\r\n            >\r\n                <div className={styles.top}>\r\n                    <h2>\r\n                        {`${monthLong[selectedMonth]} ${selectedYear}`}\r\n                    </h2>\r\n                </div>\r\n                <table className={styles.table}>\r\n                    <thead>\r\n                        <tr>\r\n                            { daysShort.map(day => <td key={day}>{day}</td>) }\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            tBody.map(tr => {\r\n                                return (\r\n                                    <tr key={'trKey' + tr}>\r\n                                        {tr[0].map(td => {\r\n                                            return (\r\n                                                <td key={'tdKey' + Math.random()}>\r\n                                                    <div className={styles.wrapper}>\r\n                                                        <div className={styles.day}>\r\n                                                            { td !== 0 ? td : null }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                            )\r\n                                        })}\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                <NotesDividers />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\r\n\r\nimport Header from \"./Header\"\r\nimport SidebarMenu from \"./SidebarMenu\";\r\nimport Home from \"./Pages/Home\";\r\nimport Info from \"./Pages/Info\";\r\nimport Create from \"./Pages/Create\";\r\n\r\nimport {\r\n    Redirect,\r\n    Route,\r\n    Switch,\r\n    BrowserRouter,\r\n} from 'react-router-dom';\r\n\r\nimport styles from './main.module.scss';\r\n\r\nexport default function Calendar() {\r\n    return (\r\n        <HelmetProvider>\r\n            <Helmet>\r\n                <title>Calendar app</title>\r\n                <meta name=\"description\" content=\"Calendar generator site\"/>\r\n                <meta name=\"keywords\" content=\"calendar,generate\"/>\r\n            </Helmet>\r\n\r\n            <BrowserRouter>\r\n                <SidebarMenu/>\r\n                <Header/>\r\n\r\n                <main className={styles.content}>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Home}/>\r\n                        <Route path=\"/info\" component={Info}/>\r\n                        <Route path=\"/create\" component={Create}/>\r\n                        <Redirect from=\"*\" to=\"/\"/>\r\n                    </Switch>\r\n                </main>\r\n            </BrowserRouter>\r\n\r\n        </HelmetProvider>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport AppContext from './AppContext';\r\n\r\nimport enLang from '../translations/en'\r\nimport uaLang from '../translations/ua'\r\n\r\nconst langMap = {\r\n    ua: uaLang,\r\n    en: enLang,\r\n};\r\n\r\n\r\nclass Store extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isSidebarOpen: false,\r\n            translation: langMap[localStorage.getItem('lang') || 'en'],\r\n        }\r\n    }\r\n\r\n    toggleSidebarAction = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            isSidebarOpen: !this.state.isSidebarOpen\r\n        })\r\n    };\r\n\r\n    changeLanguageAction = (lang) => {\r\n      this.setState({\r\n          ...this.state,\r\n          translation: langMap[lang]\r\n      })\r\n    };\r\n\r\n    render() {\r\n        const value = {\r\n            data: {...this.state},\r\n            methods: {\r\n                toggleSidebar: this.toggleSidebarAction,\r\n                changeLanguage: this.changeLanguageAction\r\n\r\n            }\r\n        };\r\n\r\n        return (\r\n            <AppContext.Provider value={value}>\r\n                {this.props.children}\r\n            </AppContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Store;\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport Calendar from \"./components\";\r\nimport Store from \"./cammon/store/Store\";\r\n\r\nfunction App() {\r\n  return(\r\n      <Store>\r\n          <Calendar />\r\n      </Store>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__12iA4\",\"menu\":\"header_menu__qCHEy\",\"global\":\"header_global__S_xed\",\"top\":\"header_top__3jBR-\",\"middle\":\"header_middle__3OTVo\",\"bottom\":\"header_bottom__1Av-y\",\"name\":\"header_name__1aRwe\",\"lang\":\"header_lang__1W3pF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters\":\"create_filters__ZuDxU\",\"toPrint\":\"create_toPrint__1BT1B\",\"A4\":\"create_A4__cn6j5\",\"landscape\":\"create_landscape__3MLly\",\"top\":\"create_top__3hrHu\",\"table\":\"create_table__AmV9V\",\"wrapper\":\"create_wrapper__RBYyC\",\"day\":\"create_day__1_Ifw\",\"divider\":\"create_divider__1QjlL\"};"],"sourceRoot":""}